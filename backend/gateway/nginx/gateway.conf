# Configuración de Nginx para API Gateway - Sistema Pontificia
# Archivo: /etc/nginx/sites-available/sistema-pontificia-gateway

upstream gateway_backend {
    server 127.0.0.1:8000;
    # Si tienes múltiples instancias del gateway, puedes agregar más servidores
    # server 127.0.0.1:8001;
    # server 127.0.0.1:8002;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=gateway_limit:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=health_limit:5m rate=30r/m;
limit_req_zone $binary_remote_addr zone=docs_limit:5m rate=10r/m;

# Cache zones para respuestas estáticas
proxy_cache_path /var/cache/nginx/gateway levels=1:2 keys_zone=gateway_cache:10m inactive=60m;

server {
    listen 80;
    listen [::]:80;
    server_name api.sistema-pontificia.local localhost;
    
    # Redirección a HTTPS en producción
    # return 301 https://$server_name$request_uri;
    
    # Configuración para desarrollo (HTTP)
    
    # Logs
    access_log /var/log/nginx/gateway_access.log;
    error_log /var/log/nginx/gateway_error.log;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # CORS Headers para desarrollo
    add_header Access-Control-Allow-Origin "http://localhost:3000" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;
    add_header Access-Control-Allow-Credentials "true" always;
    
    # Handle preflight requests
    location = /options-request {
        add_header Access-Control-Allow-Origin "http://localhost:3000";
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept";
        add_header Access-Control-Allow-Credentials "true";
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        return 200;
    }
    
    # Proxy settings
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;
    
    # Timeouts
    proxy_connect_timeout 30s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    # Buffer settings
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;
    
    # Health check endpoint con rate limiting específico
    location /health/ {
        limit_req zone=health_limit burst=10 nodelay;
        
        proxy_pass http://gateway_backend;
        proxy_cache gateway_cache;
        proxy_cache_valid 200 30s;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        
        # Headers específicos para health check
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # Documentación con rate limiting más restrictivo
    location ~ ^/(docs|api/docs|api/redoc)/ {
        limit_req zone=docs_limit burst=5 nodelay;
        
        proxy_pass http://gateway_backend;
        proxy_cache gateway_cache;
        proxy_cache_valid 200 5m;
        
        # Cache estático para documentación
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
            proxy_pass http://gateway_backend;
            proxy_cache gateway_cache;
            proxy_cache_valid 200 1h;
            expires 1h;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # API endpoints del gateway
    location /api/gateway/ {
        limit_req zone=gateway_limit burst=20 nodelay;
        proxy_pass http://gateway_backend;
        
        # No cache para endpoints dinámicos
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
    
    # Schema endpoint
    location /api/schema/ {
        limit_req zone=docs_limit burst=5 nodelay;
        proxy_pass http://gateway_backend;
        proxy_cache gateway_cache;
        proxy_cache_valid 200 5m;
    }
    
    # Test endpoints
    location /test/ {
        limit_req zone=gateway_limit burst=10 nodelay;
        proxy_pass http://gateway_backend;
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
    
    # Proxy routes a microservicios
    # Estas son las rutas que se proxean a cada microservicio
    
    location /auditoria/ {
        limit_req zone=gateway_limit burst=50 nodelay;
        proxy_pass http://gateway_backend;
        
        # Headers específicos para auditoría
        proxy_set_header X-Service "auditoria";
        proxy_set_header X-Gateway-Time $msec;
    }
    
    location /auth/ {
        limit_req zone=gateway_limit burst=100 nodelay;
        proxy_pass http://gateway_backend;
        
        # Headers específicos para auth
        proxy_set_header X-Service "auth";
        proxy_set_header X-Gateway-Time $msec;
        
        # No cache para endpoints de auth
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
    
    location /users/ {
        limit_req zone=gateway_limit burst=50 nodelay;
        proxy_pass http://gateway_backend;
        proxy_set_header X-Service "users";
        proxy_set_header X-Gateway-Time $msec;
    }
    
    location /academic/ {
        limit_req zone=gateway_limit burst=50 nodelay;
        proxy_pass http://gateway_backend;
        proxy_set_header X-Service "academic";
        proxy_set_header X-Gateway-Time $msec;
    }
    
    location /students/ {
        limit_req zone=gateway_limit burst=50 nodelay;
        proxy_pass http://gateway_backend;
        proxy_set_header X-Service "students";
        proxy_set_header X-Gateway-Time $msec;
    }
    
    location /courses/ {
        limit_req zone=gateway_limit burst=50 nodelay;
        proxy_pass http://gateway_backend;
        proxy_set_header X-Service "courses";
        proxy_set_header X-Gateway-Time $msec;
    }
    
    location /reports/ {
        limit_req zone=gateway_limit burst=30 nodelay;
        proxy_pass http://gateway_backend;
        proxy_set_header X-Service "reports";
        proxy_set_header X-Gateway-Time $msec;
    }
    
    # Default location - root y otros endpoints
    location / {
        limit_req zone=gateway_limit burst=20 nodelay;
        proxy_pass http://gateway_backend;
        
        # Handle OPTIONS requests for CORS
        if ($request_method = 'OPTIONS') {
            return 307 /options-request;
        }
    }
    
    # Error pages
    error_page 429 /429.json;
    location = /429.json {
        return 429 '{"error": "Rate limit exceeded", "message": "Too many requests"}';
        add_header Content-Type application/json;
    }
    
    error_page 502 503 504 /50x.json;
    location = /50x.json {
        return 503 '{"error": "Service unavailable", "message": "Gateway temporarily unavailable"}';
        add_header Content-Type application/json;
    }
}

# Configuración HTTPS para producción (comentada para desarrollo)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name api.sistema-pontificia.com;
#     
#     # SSL Configuration
#     ssl_certificate /path/to/your/certificate.crt;
#     ssl_certificate_key /path/to/your/private.key;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     
#     # HSTS
#     add_header Strict-Transport-Security "max-age=63072000" always;
#     
#     # Same configuration as HTTP server but with HTTPS
#     # ... (copy all location blocks from above)
# }