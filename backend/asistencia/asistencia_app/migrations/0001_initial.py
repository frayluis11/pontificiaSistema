# Generated by Django 4.2.7 on 2025-10-03 02:17

import datetime
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ConfiguracionHorario',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tipo', models.CharField(choices=[('GENERAL', 'General'), ('DOCENTE', 'Por Docente'), ('AULA', 'Por Aula'), ('SECCION', 'Por Sección')], default='GENERAL', max_length=15)),
                ('docente_id', models.UUIDField(blank=True, help_text='ID del docente (si es configuración específica)', null=True)),
                ('aula', models.CharField(blank=True, help_text='Aula específica', max_length=20)),
                ('seccion', models.CharField(blank=True, help_text='Sección específica', max_length=10)),
                ('hora_entrada', models.TimeField(default=datetime.time(8, 0), help_text='Hora de entrada programada')),
                ('hora_salida', models.TimeField(default=datetime.time(17, 0), help_text='Hora de salida programada')),
                ('dias_semana', models.CharField(default='1,2,3,4,5', help_text='Días de la semana (1=Lunes, 7=Domingo)', max_length=20)),
                ('activo', models.BooleanField(default=True, help_text='Indica si la configuración está activa')),
                ('fecha_inicio', models.DateField(help_text='Fecha de inicio de vigencia')),
                ('fecha_fin', models.DateField(blank=True, help_text='Fecha de fin de vigencia', null=True)),
                ('tolerancia_minutos', models.PositiveIntegerField(default=5, help_text='Minutos de tolerancia para tardanza')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('creado_por', models.UUIDField(blank=True, null=True)),
                ('modificado_por', models.UUIDField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Configuración de Horario',
                'verbose_name_plural': 'Configuraciones de Horarios',
                'db_table': 'asistencia_configuracion_horario',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='JustificacionAusencia',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='ID único de la justificación', primary_key=True, serialize=False)),
                ('docente_id', models.UUIDField(help_text='ID del docente (referencia al Users Service)')),
                ('fecha', models.DateField(help_text='Fecha de la ausencia a justificar')),
                ('fecha_hasta', models.DateField(blank=True, help_text='Fecha final (para rangos de días)', null=True)),
                ('motivo', models.CharField(choices=[('ENFERMEDAD', 'Enfermedad'), ('EMERGENCIA_FAMILIAR', 'Emergencia Familiar'), ('CITA_MEDICA', 'Cita Médica'), ('CAPACITACION', 'Capacitación'), ('PERMISO_PERSONAL', 'Permiso Personal'), ('LICENCIA_MATERNIDAD', 'Licencia de Maternidad'), ('LICENCIA_PATERNIDAD', 'Licencia de Paternidad'), ('DUELO', 'Duelo'), ('OTRO', 'Otro')], help_text='Motivo de la ausencia', max_length=25)),
                ('descripcion', models.TextField(help_text='Descripción detallada del motivo', max_length=1000)),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('APROBADA', 'Aprobada'), ('RECHAZADA', 'Rechazada'), ('EN_REVISION', 'En Revisión')], default='PENDIENTE', help_text='Estado de la justificación', max_length=15)),
                ('documento_adjunto', models.CharField(blank=True, help_text='Ruta del documento adjunto (certificado médico, etc.)', max_length=255)),
                ('numero_documento', models.CharField(blank=True, help_text='Número del documento de respaldo', max_length=50)),
                ('aprobado_por', models.UUIDField(blank=True, help_text='ID del usuario que aprobó/rechazó la justificación', null=True)),
                ('fecha_aprobacion', models.DateTimeField(blank=True, help_text='Fecha de aprobación/rechazo', null=True)),
                ('comentarios_aprobacion', models.TextField(blank=True, help_text='Comentarios del aprobador', max_length=500)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora de creación')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, help_text='Fecha y hora de última modificación')),
                ('creado_por', models.UUIDField(blank=True, help_text='ID del usuario que creó la justificación', null=True)),
                ('modificado_por', models.UUIDField(blank=True, help_text='ID del usuario que modificó la justificación', null=True)),
                ('requiere_reemplazo', models.BooleanField(default=False, help_text='Indica si la ausencia requiere un docente de reemplazo')),
                ('docente_reemplazo_id', models.UUIDField(blank=True, help_text='ID del docente de reemplazo asignado', null=True)),
                ('notificado_coordinacion', models.BooleanField(default=False, help_text='Indica si se notificó a coordinación')),
                ('dias_calendario', models.PositiveIntegerField(default=1, help_text='Número de días calendario de la ausencia')),
            ],
            options={
                'verbose_name': 'Justificación de Ausencia',
                'verbose_name_plural': 'Justificaciones de Ausencia',
                'db_table': 'asistencia_justificacion_ausencia',
                'ordering': ['-fecha_creacion', '-fecha'],
            },
        ),
        migrations.CreateModel(
            name='RegistroHora',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='ID único del registro', primary_key=True, serialize=False)),
                ('docente_id', models.UUIDField(help_text='ID del docente (referencia al Users Service)')),
                ('aula', models.CharField(help_text='Aula o lugar donde se registra la asistencia', max_length=20)),
                ('seccion', models.CharField(help_text='Sección o grupo de clase', max_length=10)),
                ('fecha', models.DateField(help_text='Fecha del registro de asistencia')),
                ('hora_entrada', models.TimeField(blank=True, help_text='Hora de entrada registrada', null=True)),
                ('hora_salida', models.TimeField(blank=True, help_text='Hora de salida registrada', null=True)),
                ('estado', models.CharField(choices=[('PRESENTE', 'Presente'), ('TARDANZA', 'Tardanza'), ('AUSENTE', 'Ausente'), ('JUSTIFICADO', 'Justificado'), ('INCOMPLETO', 'Incompleto')], default='PRESENTE', help_text='Estado de la asistencia', max_length=15)),
                ('observacion', models.TextField(blank=True, help_text='Observaciones adicionales sobre el registro', max_length=500)),
                ('horario_programado_entrada', models.TimeField(default=datetime.time(8, 0), help_text='Hora programada de entrada')),
                ('horario_programado_salida', models.TimeField(default=datetime.time(17, 0), help_text='Hora programada de salida')),
                ('minutos_tardanza', models.PositiveIntegerField(default=0, help_text='Minutos de tardanza calculados')),
                ('descuento_aplicado', models.DecimalField(decimal_places=2, default=0.0, help_text='Descuento aplicado por tardanza (en soles)', max_digits=10)),
                ('tolerancia_aplicada', models.BooleanField(default=False, help_text='Indica si se aplicó la tolerancia de 5 minutos')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora de creación del registro')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, help_text='Fecha y hora de última modificación')),
                ('creado_por', models.UUIDField(blank=True, help_text='ID del usuario que creó el registro', null=True)),
                ('modificado_por', models.UUIDField(blank=True, help_text='ID del usuario que modificó el registro', null=True)),
                ('ip_registro', models.GenericIPAddressField(blank=True, help_text='IP desde donde se registró la asistencia', null=True)),
                ('dispositivo', models.CharField(blank=True, help_text='Dispositivo usado para el registro', max_length=100)),
                ('coordenadas_gps', models.CharField(blank=True, help_text='Coordenadas GPS del registro (lat,lng)', max_length=100)),
            ],
            options={
                'verbose_name': 'Registro de Hora',
                'verbose_name_plural': 'Registros de Horas',
                'db_table': 'asistencia_registro_hora',
                'ordering': ['-fecha', '-fecha_creacion'],
                'indexes': [models.Index(fields=['docente_id'], name='asist_reg_docente_idx'), models.Index(fields=['fecha'], name='asist_reg_fecha_idx'), models.Index(fields=['estado'], name='asist_reg_estado_idx'), models.Index(fields=['aula'], name='asist_reg_aula_idx'), models.Index(fields=['fecha_creacion'], name='asist_reg_creacion_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='registrohora',
            constraint=models.UniqueConstraint(fields=('docente_id', 'fecha', 'aula', 'seccion'), name='asist_reg_unique_docente_fecha_aula'),
        ),
        migrations.AddIndex(
            model_name='justificacionausencia',
            index=models.Index(fields=['docente_id'], name='asist_just_docente_idx'),
        ),
        migrations.AddIndex(
            model_name='justificacionausencia',
            index=models.Index(fields=['fecha'], name='asist_just_fecha_idx'),
        ),
        migrations.AddIndex(
            model_name='justificacionausencia',
            index=models.Index(fields=['estado'], name='asist_just_estado_idx'),
        ),
        migrations.AddIndex(
            model_name='justificacionausencia',
            index=models.Index(fields=['motivo'], name='asist_just_motivo_idx'),
        ),
        migrations.AddIndex(
            model_name='justificacionausencia',
            index=models.Index(fields=['fecha_creacion'], name='asist_just_creacion_idx'),
        ),
        migrations.AddConstraint(
            model_name='justificacionausencia',
            constraint=models.UniqueConstraint(fields=('docente_id', 'fecha'), name='asist_just_unique_docente_fecha'),
        ),
        migrations.AddIndex(
            model_name='configuracionhorario',
            index=models.Index(fields=['docente_id'], name='asist_conf_docente_idx'),
        ),
        migrations.AddIndex(
            model_name='configuracionhorario',
            index=models.Index(fields=['tipo'], name='asist_conf_tipo_idx'),
        ),
        migrations.AddIndex(
            model_name='configuracionhorario',
            index=models.Index(fields=['activo'], name='asist_conf_activo_idx'),
        ),
    ]
