# Generated by Django 4.2.7 on 2025-10-02 22:25

import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único del perfil', primary_key=True, serialize=False)),
                ('usuario_id', models.CharField(help_text='ID del usuario en el sistema de autenticación', max_length=50, unique=True)),
                ('telefono', models.CharField(blank=True, help_text='Número de teléfono del usuario', max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Número de teléfono debe estar en formato: '+999999999'. Hasta 15 dígitos.", regex='^\\+?1?\\d{9,15}$')])),
                ('direccion', models.TextField(blank=True, help_text='Dirección completa del usuario', null=True)),
                ('cargo', models.CharField(choices=[('RECTOR', 'Rector'), ('VICERRECTOR', 'Vicerrector'), ('DECANO', 'Decano'), ('DIRECTOR', 'Director'), ('COORDINADOR', 'Coordinador'), ('DOCENTE_PRINCIPAL', 'Docente Principal'), ('DOCENTE_ASOCIADO', 'Docente Asociado'), ('DOCENTE_AUXILIAR', 'Docente Auxiliar'), ('JEFE_RRHH', 'Jefe de Recursos Humanos'), ('ANALISTA_RRHH', 'Analista de Recursos Humanos'), ('CONTADOR', 'Contador'), ('ASISTENTE_CONTABLE', 'Asistente Contable'), ('ESTUDIANTE', 'Estudiante'), ('ADMINISTRATIVO', 'Personal Administrativo'), ('OTRO', 'Otro')], default='OTRO', help_text='Cargo del usuario en la institución', max_length=30)),
                ('departamento', models.CharField(choices=[('RECTORADO', 'Rectorado'), ('VICERRECTORADO', 'Vicerrectorado'), ('FAC_INGENIERIA', 'Facultad de Ingeniería'), ('FAC_MEDICINA', 'Facultad de Medicina'), ('FAC_DERECHO', 'Facultad de Derecho'), ('FAC_EDUCACION', 'Facultad de Educación'), ('FAC_ECONOMIA', 'Facultad de Economía'), ('RRHH', 'Recursos Humanos'), ('CONTABILIDAD', 'Contabilidad'), ('SISTEMAS', 'Sistemas e Informática'), ('BIBLIOTECA', 'Biblioteca'), ('MANTENIMIENTO', 'Mantenimiento'), ('SEGURIDAD', 'Seguridad'), ('ESTUDIANTES', 'Estudiantes'), ('OTRO', 'Otro')], default='OTRO', help_text='Departamento al que pertenece el usuario', max_length=30)),
                ('fecha_ingreso', models.DateField(blank=True, help_text='Fecha de ingreso a la institución', null=True)),
                ('codigo_empleado', models.CharField(blank=True, help_text='Código único de empleado (opcional)', max_length=20, null=True, unique=True)),
                ('extension_telefonica', models.CharField(blank=True, help_text='Extensión telefónica interna', max_length=10, null=True)),
                ('contacto_emergencia_nombre', models.CharField(blank=True, help_text='Nombre del contacto de emergencia', max_length=200, null=True)),
                ('contacto_emergencia_telefono', models.CharField(blank=True, help_text='Teléfono del contacto de emergencia', max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Número de teléfono debe estar en formato: '+999999999'. Hasta 15 dígitos.", regex='^\\+?1?\\d{9,15}$')])),
                ('activo', models.BooleanField(default=True, help_text='Indica si el perfil está activo')),
                ('fecha_creacion', models.DateTimeField(default=django.utils.timezone.now, help_text='Fecha y hora de creación del perfil')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, help_text='Fecha y hora de última modificación')),
                ('creado_por', models.CharField(blank=True, help_text='ID del usuario que creó el perfil', max_length=50, null=True)),
                ('modificado_por', models.CharField(blank=True, help_text='ID del usuario que modificó el perfil por última vez', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Perfil de Usuario',
                'verbose_name_plural': 'Perfiles de Usuarios',
                'db_table': 'users_profiles',
                'ordering': ['-fecha_creacion'],
                'indexes': [models.Index(fields=['usuario_id'], name='usr_prof_usuario_id_idx'), models.Index(fields=['cargo'], name='usr_prof_cargo_idx'), models.Index(fields=['departamento'], name='usr_prof_depto_idx'), models.Index(fields=['activo'], name='usr_prof_activo_idx'), models.Index(fields=['fecha_creacion'], name='usr_prof_fecha_crea_idx')],
            },
        ),
    ]
