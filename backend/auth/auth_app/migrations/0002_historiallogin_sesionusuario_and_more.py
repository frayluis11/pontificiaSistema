# Generated by Django 4.2.7 on 2025-10-03 22:09

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('auth_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistorialLogin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_login', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('exitoso', models.BooleanField(default=True)),
                ('razon_fallo', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'verbose_name': 'Historial de Login',
                'verbose_name_plural': 'Historial de Logins',
                'db_table': 'historial_logins',
                'ordering': ['-fecha_login'],
            },
        ),
        migrations.CreateModel(
            name='SesionUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token_id', models.CharField(max_length=255, unique=True)),
                ('refresh_token_id', models.CharField(max_length=255, unique=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_expiracion', models.DateTimeField()),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('activa', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Sesión de Usuario',
                'verbose_name_plural': 'Sesiones de Usuarios',
                'db_table': 'sesiones_usuarios',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.RemoveField(
            model_name='tokenblacklist',
            name='usuario',
        ),
        migrations.RenameIndex(
            model_name='usuario',
            new_name='usuarios_correo_ee1198_idx',
            old_name='auth_usuari_correo_fc00bd_idx',
        ),
        migrations.RenameIndex(
            model_name='usuario',
            new_name='usuarios_dni_5caf68_idx',
            old_name='auth_usuari_dni_5526e0_idx',
        ),
        migrations.RenameIndex(
            model_name='usuario',
            new_name='usuarios_rol_936bfb_idx',
            old_name='auth_usuari_rol_f6db00_idx',
        ),
        migrations.RenameIndex(
            model_name='usuario',
            new_name='usuarios_estado_7877c9_idx',
            old_name='auth_usuari_estado_e12e84_idx',
        ),
        migrations.RenameIndex(
            model_name='usuario',
            new_name='usuarios_fecha_c_7963d7_idx',
            old_name='auth_usuari_fecha_c_1204d5_idx',
        ),
        migrations.RemoveField(
            model_name='usuario',
            name='fecha_modificacion',
        ),
        migrations.RemoveField(
            model_name='usuario',
            name='fecha_ultimo_acceso',
        ),
        migrations.AddField(
            model_name='usuario',
            name='avatar',
            field=models.URLField(blank=True, help_text='URL del avatar del usuario', null=True),
        ),
        migrations.AddField(
            model_name='usuario',
            name='cargo',
            field=models.CharField(blank=True, help_text='Cargo o posición', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='usuario',
            name='departamento',
            field=models.CharField(blank=True, help_text='Departamento o área de trabajo', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='usuario',
            name='fecha_actualizacion',
            field=models.DateTimeField(auto_now=True, help_text='Fecha y hora de última actualización'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='fecha_bloqueo',
            field=models.DateTimeField(blank=True, help_text='Fecha de bloqueo por intentos fallidos', null=True),
        ),
        migrations.AddField(
            model_name='usuario',
            name='fecha_vencimiento_password',
            field=models.DateTimeField(blank=True, help_text='Fecha de vencimiento de la contraseña', null=True),
        ),
        migrations.AddField(
            model_name='usuario',
            name='intentos_login_fallidos',
            field=models.PositiveSmallIntegerField(default=0, help_text='Número de intentos de login fallidos consecutivos'),
        ),
        migrations.AddField(
            model_name='usuario',
            name='telefono',
            field=models.CharField(blank=True, help_text='Número de teléfono', max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Número de teléfono debe tener el formato: +999999999. Máximo 15 dígitos.', regex='^\\+?1?\\d{9,15}$')]),
        ),
        migrations.AddField(
            model_name='usuario',
            name='ultimo_login',
            field=models.DateTimeField(blank=True, help_text='Fecha y hora del último inicio de sesión', null=True),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='apellido',
            field=models.CharField(help_text='Apellidos del usuario', max_length=100),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='correo',
            field=models.EmailField(help_text='Correo electrónico único', max_length=150, unique=True),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='dni',
            field=models.CharField(help_text='Documento de identidad único', max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='DNI debe contener entre 6 y 12 dígitos', regex='^\\d{6,12}$')]),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='estado',
            field=models.CharField(choices=[('ACTIVO', 'Activo'), ('INACTIVO', 'Inactivo'), ('SUSPENDIDO', 'Suspendido'), ('PENDIENTE', 'Pendiente Activación')], default='PENDIENTE', help_text='Estado actual del usuario', max_length=20),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='fecha_creacion',
            field=models.DateTimeField(auto_now_add=True, help_text='Fecha y hora de creación del usuario'),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='usuarios', related_query_name='usuario', to='auth.group', verbose_name='groups'),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='id',
            field=models.AutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='is_staff',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='is_superuser',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='nombre',
            field=models.CharField(help_text='Nombres del usuario', max_length=100),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='rol',
            field=models.CharField(choices=[('ADMIN', 'Administrador'), ('DOCENTE', 'Docente'), ('RRHH', 'Recursos Humanos'), ('CONTABILIDAD', 'Contabilidad'), ('ESTUDIANTE', 'Estudiante')], default='ESTUDIANTE', help_text='Rol del usuario en el sistema', max_length=20),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='usuarios', related_query_name='usuario', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AlterModelTable(
            name='usuario',
            table='usuarios',
        ),
        migrations.DeleteModel(
            name='TokenBlacklist',
        ),
        migrations.AddField(
            model_name='sesionusuario',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sesiones', to='auth_app.usuario'),
        ),
        migrations.AddField(
            model_name='historiallogin',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historial_logins', to='auth_app.usuario'),
        ),
    ]
